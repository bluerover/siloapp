<%- include report_js_css.ejs %>
<script type="text/javascript">
    $(document).ready(function() {

        Object.size = function(obj) {
            var size = 0, key;
            for (key in obj) {
                if (obj.hasOwnProperty(key)) size++;
            }
            return size;
        };

        $('#download_csv_btn').hide();

        function updateTable(start, end, page, limit) {
            $("#download_csv_btn a").attr("href", "/compliance_data?csv=1&range_start=" + start.format("X") + "&range_end=" + end.format("X"));
            $("#table-loading").show();
            $("#compliance_table tbody tr").remove();
            $.ajax({
                type: "GET",
                url: "/compliance_data",
                data: {
                    range_start: start.format("X"),
                    range_end: end.format("X"),
                    page: page,
                    // limit: limit,
                    sort: 'asc'
                },
                success: function(response) {
                    $("#table-loading").hide();
                    var data = JSON.parse(response);
                    for (var i in data) {
                        $("#compliance_table").append("<tr>" +
                                "<td>" + data[i]['rfidTagNum'] + "</td>" +
                                "<td>" + data[i]['display_name'] + "</td>" +
                                "<td>" + data[i]['display_name_2'] + "</td>" +
                                "<td>" + data[i]['avgTemp'] + "</td>" +
                                "<td>" + data[i]['varTemp'] + "</td>" +
                                "<td>" + data[i]['total'] + "</td>" +
                                "<td>" + data[i]['passingTotal'] + "</td>" +
                                //"<td>" + moment.unix(data[i]['timestamp']).format("MM/DD/YYYY hh:mm:ss a") + "</td>" +
                                "</tr>");
                    }
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                }
            });
        }

        function createForm() {
             $.ajax({
                type: "GET",
                url: "/compliance_settings",
                success: function(response) {
                    $("#table-loading").hide();
                    var data = JSON.parse(response);
                    console.log(data);
                    var thresholds = {};
                    var timeFilters;
                    if(Object.size(data) > 1) {
                        thresholds = JSON.parse(data["compliance"][0]["thresholds"]);
                        timeFilters = JSON.parse(data["compliance"][0]["timefilters"]);
                    }
                    for (var i in data["rfids"]) {
                        $("#rfidList").append("<tr>" +
                                "<td>" + data["rfids"][i].id + "</td>" +
                                "<td>" + data["rfids"][i].display_name + "</td>" +
                                "<td>" + data["rfids"][i].display_name_2 + "</td>" +
                                "<td><input class='input-small' type='text' id='" + data["rfids"][i].id +
                                (data["rfids"][i].display_name_2 === null ? "_max" : "_min") + "_threshold' " + "value='0'></td>" +
                                "</tr>");
                    }
                    for (var thresholdID in thresholds) {
                        $('#' + thresholdID).val(thresholds[thresholdID]);
                    }
                    for(var filter in timeFilters) {
                        if($('input[name=startTime_' + filter + ']').length == 0) {
                            addFilter();
                        }
                        var startTime = moment.unix(timeFilters[filter][0]);
                        var endTime = moment.unix(timeFilters[filter][1]);
                        $('input[name=startTime_' + filter + ']').val(startTime.format("HH:mm"));
                        $('input[name=endTime_' + filter + ']').val(endTime.format("HH:mm"));
                        $('input[name=timezone_' + filter + ']').val("EDT");
                    }
                    var newStart = moment.unix(timeFilters[0][0]).format('MMMM D, YYYY');
                    var newEnd = moment.unix(timeFilters[timeFilters.length-1][1]).add('days',1).format('MMMM D, YYYY');
                    $('#reportrange span').html(newStart + ' - ' + newEnd);
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                }
            });
        }    

        function getFormValues() {
            var values = {};
            dangerFlag = false;
            $('.errorMessage, #errorBlock').empty().hide("slow");
            $('#rfidList .alert-danger').removeClass("alert-danger");

            //check for null/und values in the time form
            var timeData = [];
            var timeArray = [];
            var counter = 0;
            var array = $('#compliance_settings > form').serializeArray();
            $.each(array, function(i, field) {
                if(field.value === undefined || !(field.value)) {
                    //put alert under that tag
                    $('input[name*='+ field.name + ']').siblings(".errorMessage").append("please fix this value").collapse("show");
                    dangerFlag = true;
                } else {
                    if(i % 3 == 0) {
                        if(Date.parse("01/01/2011 " + array[i].value) > Date.parse("01/01/2011 " + array[i+1].value)) {
                            $('input[name*='+ field.name + ']').siblings(".errorMessage").append("start time greater than end time").collapse("show");
                            dangerFlag = true;
                        }
                    }
                    timeData.push(field.value);
                    if(timeData.length == 3) {
                        timeArray[counter.toString()] = timeData;
                        timeData = [];
                        counter++;
                    }
                }
            });
            values["timeFilters"] = [];
            var startDate = pickerStart;
            while(startDate.unix() < pickerEnd.unix()) {
                for(var index in timeArray) {
                    var tmpArray = [];
                    tmpArray[0] = startDate.hour(timeArray[index][0].split(":")[0]).minute(timeArray[index][0].split(":")[1]).zone(timeArray[index][2]).unix();
                    tmpArray[1] = startDate.hour(timeArray[index][1].split(":")[0]).minute(timeArray[index][1].split(":")[1]).zone(timeArray[index][2]).unix();
                    values["timeFilters"].push(tmpArray);
                }
               startDate = startDate.dayOfYear(startDate.dayOfYear()+1);
            }
            
            $('#rfidList input').each(function(i, input) {
                var value = $(input).val();
                if(value === undefined || !(value) || !($.isNumeric(value))) {
                    $(input).parent().parent().addClass('alert-danger');
                    dangerFlag = true;
                } else {
                    values[$(input).attr('id')] = value;
                }
            });

            if(dangerFlag) {
                $('#errorBlock').empty().append("There are errors with your values. Please correct and try again.").collapse("show");
            }

            return values;
        }

        function addFilter() {
            var filter = $('#filters > div').first().clone().insertAfter($('#filters > div').last());
            filter.attr('id', 'filter' + (filterNum+1));
            filter.find('input[name*=startTime]').attr('name','startTime_' + (filterNum+1));
            filter.find('input[name*=endTime]').attr('name','endTime_' + (filterNum+1));
            filter.find('select[name*=timezone]').attr('name','timezone_' + (filterNum+1));
            filterNum += 1;

            $('.removeFilter').on('click', function() {
                if($('#filters > div').length > 1) {
                    $(this).parent().parent().remove();
                }
            });
        }

        function pollJob(job_id) {
            //poll the job status until it is complete
            var values = {};
            values["job_id"] = job_id.toString();
            var pollId = setInterval(function() {
                $.ajax({
                    type: "GET",
                    url: "/poll_job",
                    data: values,
                    success: function(new_job_data) {
                        var newJob = JSON.parse(new_job_data);
                        var status = newJob["status"];
                        if(status === undefined || !(status)) {
                            console.log("all done");
                            clearInterval(pollId);
                            reportJSON = newJob;
                            setupComplianceTable(newJob);
                        }
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                    }
                });
            },700);
        }

        function setupComplianceTable(reportData) {
            $('#compliance_settings').addClass('collapse');
            var report = JSON.parse(reportJSON);
            reportData = report;
            console.log(report);
            var appendString = "<table class='table table-condensed'>" +
                               "<th>Asset Name</th>" +
                               "<th>Sensor Type</th>" +
                               "<th>Threshold</th>";
            for(var timeframe in report) {
                var times = timeframe.split("_");
                var headerString = "<th colspan='2'>";
                headerString += moment.unix(times[0]).format("MMM DD YYYY h:mm Z") + " - ";
                headerString += moment.unix(times[1]).format("MMM DD YYYY h:mm Z") + "</th>";
                appendString += headerString;
            }

            for (var dummyTimeFrame in report) {
                for(var asset in report[dummyTimeFrame]) {
                    appendString += "<tr><td>" + report[dummyTimeFrame][asset].display_name + "</td><td>" +
                                    report[dummyTimeFrame][asset].display_name_2 + "</td><td style='border-right: 1px solid #ddd;'>" +
                                    report[dummyTimeFrame][asset].threshold + "</td>";
                    for(var timeframe in report) {
                        appendString += "<td> Avg: " + report[timeframe][asset].avgTemp +
                                        "<br/> Var: " + report[timeframe][asset].varTemp + 
                                        "</td><td style='border-right: 1px solid #ddd;'> Per: " + report[timeframe][asset].passingTemp + "/" + report[timeframe][asset].total + "</td>";
                    }
                    appendString += "</tr>";
                }
                appendString += "</table>";
                $('#results').append(appendString);
                break;
            }
            $('#results').removeClass('collapse');
            $('#flipButton').empty().append("Back to settings").unbind('click').on('click', function() {
                $('#results').empty().addClass('collapse');
                $('#compliance_settings').removeClass('collapse');
                $('#download_csv_btn').hide().find('a').attr('href',"#");
                $('#flipButton').empty().append("Generate Report").unbind('click').on('click', function() {
                    generateReport();
                });
            });

            $('#download_csv_btn').show().find('a').attr('href', "/save_as_csv?data=" + encodeURIComponent(reportJSON));
        }

        function generateReport() {
            var values = getFormValues();
            console.log(values);
            if(!dangerFlag) {
                $.ajax({
                    type: "GET",
                    url: "/compliance_data",
                    data: values,
                    success: function(job_data) {
                        var job = JSON.parse(job_data);
                        console.log(job);
                        setTimeout(pollJob(job["id"]),100);
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                    }
                });
            }
        }

        function generateCSV() {
            if(reportJSON === "") return;
            $.ajax({
                type: "GET",
                url: "/save_as_csv",
                data: reportJSON,
                success: function(data) {
                    console.log(data);
                },
                failed: function(response) {
                    console.log("Error");
                    console.log(response);
                }
            });
        }

        var dangerFlag;
        var filterNum = 0;
        var reportJSON = "";
        var defaultEnd = moment().hour(0).minute(0).second(0).millisecond(0);
        var defaultStart = moment().hour(0).minute(0).second(0).millisecond(0).subtract('days', 1);
        var pickerStart = defaultStart;
        var pickerEnd = defaultEnd;
        createForm();

        $('#reportrange span').html(defaultStart.format('MMMM D, YYYY') + ' - ' + defaultEnd.format('MMMM D, YYYY'));
        $('#reportrange').daterangepicker(
                {
                    ranges: {
                        'Today': [moment(), moment().add('days', 1)],
                        'Yesterday': [moment().subtract('days', 1), moment()],
                        'Last 7 Days': [moment().subtract('days', 7), moment()],
                        'Last 30 Days': [moment().subtract('days', 30), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                    },
                    startDate: defaultStart,
                    endDate: defaultEnd,
                    opens: "left",
                    maxDate: moment().add('days', 1)
                },
                function(start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                    pickerStart = start;
                    pickerEnd = end;
                }
        );

        $(".form-horizontal").keypress(function(e) {
            if ( e.which == 13 ) {
                e.preventDefault();
            }
        });

        $('#addFilter').on('click', function() {
            addFilter();
        });

        $('#saveSettings').on('click', function() {
            var values = getFormValues();
            if(!dangerFlag) {
               $.ajax({
                    type: "GET",
                    url: "/save_compsettings",
                    data: values,
                    success: function(response) {
                        if(Object.size(response) === 0) {
                            alert("compliance settings saved");
                        }
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                    }
                });
            }
        });

        $('#flipButton').on('click', function() {
            generateReport();
        });
    });
</script>

<%- include report_header.ejs %>
<div id="errorBlock" class="col-sm-offset-3 col-sm-6 alert alert-danger collapse" style="text-align:center;">
</div>
<div class="col-sm-offset-3">&nbsp;</div>
<div id="results" class="col-sm-12 collapse">
</div>
<div id="compliance_settings">
    <form class="form-horizontal" role="form">
        <div class="col-md-4" id="filters" style="vertical-align:top;">
            <legend>Time Intervals</legend>
            <div id="filter0" class="filter">
                <div>
                    <a href="javascript:;" class="removeFilter"><span class="glyphicon glyphicon-remove"></span></a>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">Start Time</label>
                    <div class="input-group col-sm-8">
                        <input name="startTime_0" type="time" class="form-control">
                        <div class="errorMessage alert alert-danger"></div>
                        <!--<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span> -->
                    </div>
                    
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">End Time</label>
                    <div class="input-group col-sm-8">
                        <input name="endTime_0" type="time" class="form-control">
                        <div class="errorMessage alert alert-danger"></div>
                        <!--<span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span> -->
                    </div>
                     
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">Timezone</label>
                    <div class="input-group col-sm-8">
                        <select class="form-control" name="timezone_0">
                            <option value="-05:00">EST</option>
                            <option value="-04:00" selected>EDT</option>
                            <option value="-08:00">PST</option>
                            <option value="-07:00">PDT</option>
                            <option value="-07:00">MST</option>
                            <option value="-06:00">MDT</option>
                            <option value="-06:00">CST</option>
                            <option value="-05:00">CDT</option>
                            <option value="-04:00">AST</option>
                            <option value="-03:00">ADT</option>
                        </select>
                         <div class="errorMessage alert alert-danger"></div>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-default" id="addFilter">
                 <span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;Add filter
            </button>
             <button type="button" class="btn btn-default btn-lrg" id="saveSettings">
                 Save Settings
            </button>
        </div>
        <div class="col-md-offset-1 col-md-7">
            <legend>Device Thresholds</legend>
            <div id="table-loading" class="collapse">
                <img src="/images/loading.gif" />
            </div>
            <table id="rfidList" class="table table-condensed">
                <th>RFID Tag Number</th>
                <th>Asset Name</th>
                <th>Sensor Type</th>
                <th>Threshold</th>
            </table>
        </div>
    </form>
</div>

