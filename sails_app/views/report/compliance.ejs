<%- include report_js_css.ejs %>
<script type="text/javascript">
    $(document).ready(function() {

        Object.size = function(obj) {
            var size = 0, key;
            for (key in obj) {
                if (obj.hasOwnProperty(key)) size++;
            }
            return size;
        };

        function updatePagerStyles() {
            if (page !== 0) {
                $(".previous").removeClass("disabled");
            }
            else {
                $(".previous").addClass("disabled");
            }
        }

        $('#download_csv_btn, #errorBlock, .errorMessage, #successBlock').hide();

        function createForm() {
             $("#table-loading").show();
             $.ajax({
                type: "GET",
                url: "/compliance_settings",
                success: function(response) {
                    $("#table-loading").hide();
                    var data = JSON.parse(response);
                    console.log(data);
                    var thresholds = {};
                    var timeFilters;
                    if(Object.size(data) > 1) {
                        thresholds = JSON.parse(data["compliance"][0]["thresholds"]);
                        timeFilters = JSON.parse(data["compliance"][0]["timefilters"]);
                    }
                    for (var i in data["rfids"]) {
                        $("#rfidList").append("<tr>" +
                                "<td>" + data["rfids"][i].id + "</td>" +
                                "<td>" + data["rfids"][i].display_name + "</td>" +
                                "<td>" + data["rfids"][i].display_name_2 + "</td>" +
                                "<td><input class='input-small' type='text' id='" + data["rfids"][i].id +
                                (data["rfids"][i].display_name_2 === null ? "_max" : "_min") + "_threshold' " + "value='0'></td>" +
                                "</tr>");
                    }
                    for (var thresholdID in thresholds) {
                        $('#' + thresholdID).val(thresholds[thresholdID]);
                    }
                    if(timeFilters !== undefined) {
                        var maxDay = moment.unix(timeFilters[0][0]).set('hour',0).set('minute',0).unix() + 60*60*24;
                        for(var filter in timeFilters) {
                            var startTime = moment.unix(timeFilters[filter][0]);
                            if(startTime.unix() < maxDay) {
                                var endTime = moment.unix(timeFilters[filter][1]);
                                if($('input[name=startTime_' + filter + ']').length == 0) {
                                    addFilter();
                                }
                                $('input[name=startTime_' + filter + ']').val(startTime.format("HH:mm"));
                                $('input[name=endTime_' + filter + ']').val(endTime.format("HH:mm"));
                                $('input[name=timezone_' + filter + ']').val("EDT");
                            }
                        }
                        var newStart = moment.unix(timeFilters[0][0]).format('MMMM D, YYYY');
                        pickerStart = moment.unix(timeFilters[0][0]);
                        var newEnd = moment.unix(timeFilters[timeFilters.length-1][1]).add('days',1).format('MMMM D, YYYY');
                        pickerEnd = moment.unix(timeFilters[timeFilters.length-1][1]).add('days',1);
                        $('#reportrange span').html(newStart + ' - ' + newEnd);    
                    }
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                }
            });
        }    

        function getFormValues() {
            var values = {};
            dangerFlag = false;
            $('.errorMessage, #errorBlock').empty().hide();
            $('#rfidList .alert-danger').removeClass("alert-danger");

            var timeData = [];
            var timeArray = [];
            var counter = 0;
            var array = $('#compliance_settings > form').serializeArray();
            $.each(array, function(i, field) {
                if(field.value === undefined || !(field.value)) {
                    $('input[name*='+ field.name + ']').siblings(".errorMessage").empty().append("please fix this value").show();
                    dangerFlag = true;
                } else {
                    if(i % 3 == 0) {
                        if(Date.parse("01/01/2011 " + array[i].value) > Date.parse("01/01/2011 " + array[i+1].value)) {
                            $('input[name*='+ field.name + ']').siblings(".errorMessage").empty().append("start time greater than end time").show();
                            dangerFlag = true;
                        }
                    }
                    timeData.push(field.value);
                    if(timeData.length == 3) {
                        timeArray[counter.toString()] = timeData;
                        timeData = [];
                        counter++;
                    }
                }
            });
            values["timeFilters"] = [];
            var startDate = pickerStart;
            while(startDate.unix() < pickerEnd.unix()) {
                for(var index in timeArray) {
                    var tmpArray = [];
                    tmpArray[0] = startDate.hour(timeArray[index][0].split(":")[0]).minute(timeArray[index][0].split(":")[1]).zone(timeArray[index][2]).unix();
                    tmpArray[1] = startDate.hour(timeArray[index][1].split(":")[0]).minute(timeArray[index][1].split(":")[1]).zone(timeArray[index][2]).unix();
                    values["timeFilters"].push(tmpArray);
                }
               startDate = startDate.dayOfYear(startDate.dayOfYear()+1);
            }
            
            $('#rfidList input').each(function(i, input) {
                var value = $(input).val();
                if(value === undefined || !(value) || !($.isNumeric(value))) {
                    $(input).parent().parent().addClass('alert-danger');
                    dangerFlag = true;
                } else {
                    values[$(input).attr('id')] = value;
                }
            });

            if(dangerFlag) {
                $('#errorBlock').empty().append("There are errors with your values. Please correct and try again.").show();
            }
            return values;
        }

        function addFilter() {
            var filter = $('#filters > div').first().clone().insertAfter($('#filters > div').last());
            filter.attr('id', 'filter' + (filterNum+1));
            filter.find('input[name*=startTime]').attr('name','startTime_' + (filterNum+1));
            filter.find('input[name*=endTime]').attr('name','endTime_' + (filterNum+1));
            filter.find('select[name*=timezone]').attr('name','timezone_' + (filterNum+1));
            filterNum += 1;

            $('.removeFilter').on('click', function() {
                if($('#filters > div').length > 1) {
                    $(this).parent().parent().remove();
                }
            });
        }

        function pollJob(job_id) {
            //poll the job status until it is complete
            var pollId = setInterval(function() {
                $.ajax({
                    type: "GET",
                    url: "/poll_job",
                    data: {
                        "job_id" : job_id.toString()
                    },
                    success: function(new_job_data) {
                        var newJob = JSON.parse(new_job_data);
                        var status = newJob["status"];
                        if(status === "in-progress") {
                            $('#jobStatus' + newJob.id).empty().append(newJob.status);
                            $('#jobProgress' + newJob.id).attr("value", newJob.job["progress"]);
                            $('#progressText' + newJob.id).empty().append(newJob.job["progress"] + "% ");
                        } else if (status === "cancelled") {
                            $('#jobStatus' + newJob.id).empty().append(newJob.status);
                            $('#jobProgress' + newJob.id).attr("value", 0);
                            $('#progressText' + newJob.id).empty();
                            clearInterval(pollMap[newJob.id]);
                            delete pollMap[newJob.id];
                        } else {
                            console.log("all done");
                            clearInterval(pollMap[newJob.id]);
                            $('#jobProgress' + newJob.id).attr("value", 100);
                            $('#progressText' + newJob.id).empty().append("100%");
                            $('#jobStatus' + newJob.id).empty().append(newJob.status);
                            $('#job_' + newJob.id + ' a').parent().append('<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-share"></span></a>&nbsp;&nbsp;&nbsp;<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-circle-arrow-down"></span></a>');
                            $('#job_' + newJob.id + ' .glyphicon-minus-sign').parent().remove();
                            delete pollMap[newJob.id];
                            $('#job_' + newJob.id).find("a:first").on('click', function() {
                                setupComplianceTable($(this).parent().parent().attr("id").split("_")[1]);
                            });
                            $('#job_' + newJob.id).find("a:last").attr('href', "/get_report?csv=1&job_id=" + newJob.id);
                        }
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                    }
                });
            },1000);
            pollMap[job_id.toString()] = pollId;
        }

        function setupComplianceTable(job_id) {
            $.ajax({
                type: "GET",
                url: "/get_report",
                data: {
                    job_id: job_id.toString(),
                    csv: false
                },
                success: function(data) {
                    var report = JSON.parse(JSON.parse(data));
                    var appendString = "<table class='table table-condensed'><tr>" +
                                       "<td rowspan='2' style='vertical-align:middle;'>Device ID</td>" +
                                       "<td rowspan='2' style='vertical-align:middle;'>Asset Name</td>" +
                                       "<td rowspan='2' style='vertical-align:middle;'>Sensor Type</td>" +
                                       "<td rowspan='2' style='vertical-align:middle;'>Threshold</td>";
                    for(var timeframe in report) {
                        var times = timeframe.split("_");
                        var headerString = "<td colspan='3'>";
                        headerString += moment.unix(times[0]).format("MMM DD YYYY h:mm A") + " - ";
                        headerString += moment.unix(times[1]).format("MMM DD YYYY h:mm A") + "</td>";
                        appendString += headerString;
                    }
                    appendString += "</tr>";
                    for(var timeframe2 in report) {
                        appendString += "<td>Average</td><td>Variance</td><td>Percent</td>";
                    }
                    appendString += "</tr>";
                    for (var dummyTimeFrame in report) {
                        for(var asset in report[dummyTimeFrame]) {
                            appendString += "<tr><td>" + report[dummyTimeFrame][asset].id + "</td><td>" +
                                            report[dummyTimeFrame][asset].display_name + "</td><td>" +
                                            report[dummyTimeFrame][asset].display_name_2 + "</td><td style='border-right: 1px solid #ddd;'>" +
                                            report[dummyTimeFrame][asset].threshold + "</td>";
                            for(var timeframe in report) {
                                appendString += "<td>" + report[timeframe][asset].avgTemp + "</td>" +
                                                "<td>" + report[timeframe][asset].varTemp + "</td>" +
                                                "<td>" + report[timeframe][asset].passingTemp + "/" + report[timeframe][asset].total + "</td>";
                            }
                            appendString += "</tr>";
                        }
                        appendString += "</table>";
                        break;
                    }
                    $('#reportModal .modal-body').empty().append(appendString);
                    $('#reportModal').modal('show');
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                    $('#errorBlock').empty().append(response).show();
                }
            });
        }

        function generateReport() {
            var values = getFormValues();
            console.log(values);
            if(!dangerFlag) {
                $.ajax({
                    type: "GET",
                    url: "/compliance_queue_job",
                    data: values,
                    success: function(job_data) {
                        if(job_data.status === 500) {
                            $('#errorBlock').empty().append("A problem has occured with the server, please try again later.").show();
                        } else {
                            var job = JSON.parse(job_data);
                            var appendString = "<tr id='job_" + job["id"] + "'><td>" + job["job_type"] + "</td>" +
                                            "<td>" + '<progress id="jobProgress' + job["id"] + '" class="col-sm-6" max="100"></progress><label class="col-sm-3" id="progressText' + job["id"] + '"></label></td>' +
                                            "<td id='jobStatus" + job["id"] +"'>" + job["status"] + "</td>" +
                                            "<td>" + '<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-minus-sign"></span></a></td></tr>';
                            pollJob(job["id"]);
                            $('#jobListTable tbody').append(appendString);
                            var a = $('#jobListTable a:last');
                            a.on('click',function() {
                                killJob(a.parent().parent().attr("id").split("_")[1]);
                            });
                        }
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                        $('#errorBlock').empty().append(response).show();
                    }
                });
            }
        }

        function getQueuedJobs() {
            $.ajax({
                type: "GET",
                url: "/queued_jobs",
                data: {
                    page: page
                },
                success: function(data) {
                    var appendString = "<table id='jobListTable' class='table'>" +
                                           "<th>Job Type</th>" +
                                           "<th>Progress</th>" +
                                           "<th>Status</th>" +
                                           "<th></th>";
                    if(data !== null) {
                        var jobList = JSON.parse(data);
                        for(var index in jobList) {
                            appendString += "<tr id='job_" + jobList[index]["id"] + "'><td>" + jobList[index]["job_type"] + "</td>" +
                                            "<td>" + '<progress id="jobProgress' + jobList[index]["id"] + '" class="col-sm-6" max="100"></progress><label class="col-sm-3" id="progressText' + jobList[index]["id"] + '"></label></td>' +
                                            "<td id='jobStatus" + jobList[index]["id"] +"'>" + jobList[index]["status"] + "</td><td>";
                            if(jobList[index]["status"] === "complete") {
                                appendString += '<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-share"></span></a>&nbsp;&nbsp;&nbsp;';
                                appendString += '<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-circle-arrow-down"></span></a>';
                            } else if(jobList[index]["status"] === "in-progress") {
                                appendString += '<a href="javascript:;" style="font-size:20px"><span class="glyphicon glyphicon-minus-sign"></span></a>';
                            }
                            appendString += "</td></tr>";
                        }
                    }
                    $('#jobList').empty().append(appendString + "</table>");
                    $('#jobListTable tr').each(function (i, tr) {
                        if(i !== 0) {
                            var id = $(tr).attr('id').split("_")[1];
                            var text = $('#jobStatus' + id).text();
                            if(text === "in-progress" || text === "queued") {
                                pollJob(id);
                                $(tr).find("a").on('click', function() {
                                    killJob($(this).parent().parent().attr("id").split("_")[1]);
                                });
                            } else if(text === "complete") {
                                $(tr).find("a:first").on('click', function() {
                                    setupComplianceTable($(this).parent().parent().attr("id").split("_")[1]);
                                });
                                $(tr).find("a:last").attr('href', "/get_report?csv=1&job_id=" + $(tr).attr("id").split("_")[1]);
                            }
                            $('#jobProgress' + id).attr('value', 100);
                            $('#progressText' + id).empty().append("100%");
                        }
                    });
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                    $('#errorBlock').empty().append(response).show();
                }
            });
        }

        function killJob(id) {
            //TODO: confirm yes/no box before cancelling
            clearInterval(pollMap[id]);
            $.ajax({
                type: "GET",
                url: "/kill_job",
                data: {
                    "job_id" : id.toString()
                },
                success: function(data) {
                    id = JSON.parse(data)["id"];
                    $('#jobStatus' + id).empty().append("cancelled").next().empty(); 
                },
                error: function(response) {
                    console.log("Error");
                    console.log(response);
                }
            });
        }
        var dangerFlag;
        var filterNum = 0;
        var reportJSON = "";
        var pollMap = {};
        var defaultEnd = moment().hour(0).minute(0).second(0).millisecond(0);
        var defaultStart = moment().hour(0).minute(0).second(0).millisecond(0).subtract('days', 1);
        var pickerStart = defaultStart;
        var pickerEnd = defaultEnd;
        var page = 0;
        createForm();
        getQueuedJobs();

        $('#reportrange span').html(defaultStart.format('MMMM D, YYYY') + ' - ' + defaultEnd.format('MMMM D, YYYY'));
        $('#reportrange').daterangepicker(
                {
                    ranges: {
                        'Today': [moment(), moment().add('days', 1)],
                        'Yesterday': [moment().subtract('days', 1), moment()],
                        'Last 7 Days': [moment().subtract('days', 7), moment()],
                        'Last 30 Days': [moment().subtract('days', 30), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                    },
                    startDate: defaultStart,
                    endDate: defaultEnd,
                    opens: "left",
                    maxDate: moment().add('days', 1)
                },
                function(start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                    pickerStart = start;
                    pickerEnd = end;
                }
        );

        $(".form-horizontal").keypress(function(e) {
            if ( e.which == 13 ) {
                e.preventDefault();
            }
        });

        $('#addFilter').on('click', function() {
            addFilter();
        });

        $('#saveSettings').on('click', function() {
            var values = getFormValues();
            console.log(values);
            if(!dangerFlag) {
               $.ajax({
                    type: "GET",
                    url: "/save_compsettings",
                    data: values,
                    success: function(response) {
                        if(Object.size(response) === 0) {
                            $('#successBlock').empty().append("Compliance settings saved").show().delay(3000).fadeOut();
                        }
                    },
                    error: function(response) {
                        console.log("Error");
                        console.log(response);
                    }
                });
            }
        });

        $('#generateReport').on('click', function() {
            generateReport();
        });

        $(".next").on('click', function () {
            if ($(this).hasClass("disabled")) {
                return false;
            }
            page++;
            updatePagerStyles();
            getQueuedJobs();
        });
        $(".previous").on('click', function () {
            if ($(this).hasClass("disabled")) {
                return false;
            }
            page--;
            updatePagerStyles();
            getQueuedJobs();
        });

        $('#previousJobs').on('click', function () {
            $(this).next().animate({
                'height': 'toggle'
            }, 400);
            var icon = $(this).find("span");
            if(icon.hasClass('glyphicon-chevron-down')) {
                icon.removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            } else {
                icon.removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
            }
        });
    });
</script>

<%- include report_header.ejs %>
<div id="errorBlock" class="col-sm-offset-3 col-sm-6 alert alert-danger" style="text-align:center;">
</div>
<div class="col-sm-offset-3">&nbsp;</div>
<div id="successBlock" class="col-sm-offset-3 col-sm-6 alert alert-success" style="text-align:center;">
</div>
<div class="col-sm-offset-3">&nbsp;</div>
<div class="col-sm-12">
    <legend id="previousJobs">Previous Jobs  <span class="glyphicon glyphicon-chevron-down" style="font-size:16px;"></span></legend>
    <div class="col-sm-9" style="display:none;">
        <ul class="pager">
          <li class="previous disabled"><a href="javascript:;">&larr; Newer</a></li>
          <li class="next"><a href="javascript:;">Older &rarr;</a></li>
        </ul>
        <div class="col-sm-12" id="jobList">
        </div>
    </div>
    <div class="col-sm-offset-3">&nbsp;</div>
</div>
<div id="compliance_settings">
    <form class="form-horizontal" role="form">
        <div class="col-md-4" id="filters" style="vertical-align:top;">
            <legend>Time Intervals</legend>
            <div id="filter0" class="filter">
                <div>
                    <a href="javascript:;" class="removeFilter"><span class="glyphicon glyphicon-remove"></span></a>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">Start Time</label>
                    <div class="input-group col-sm-8">
                        <input name="startTime_0" type="time" class="form-control">
                        <div class="errorMessage alert alert-danger"></div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">End Time</label>
                    <div class="input-group col-sm-8">
                        <input name="endTime_0" type="time" class="form-control">
                        <div class="errorMessage alert alert-danger"></div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">Timezone</label>
                    <div class="input-group col-sm-8">
                        <select class="form-control" name="timezone_0">
                            <option value="-05:00">EST</option>
                            <option value="-04:00" selected>EDT</option>
                            <option value="-08:00">PST</option>
                            <option value="-07:00">PDT</option>
                            <option value="-07:00">MST</option>
                            <option value="-06:00">MDT</option>
                            <option value="-06:00">CST</option>
                            <option value="-05:00">CDT</option>
                            <option value="-04:00">AST</option>
                            <option value="-03:00">ADT</option>
                        </select>
                         <div class="errorMessage alert alert-danger"></div>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-default" id="addFilter">
                 <span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;Add filter
            </button>
             <button type="button" class="btn btn-default btn-lrg" id="saveSettings">
                 Save Settings
            </button>
        </div>
        <div class="col-md-offset-1 col-md-7">
            <legend>Device Thresholds</legend>
            <div id="table-loading" class="collapse">
                <img src="/images/loading.gif" />
            </div>
            <table id="rfidList" class="table table-condensed">
                <th>Device ID</th>
                <th>Asset Name</th>
                <th>Sensor Type</th>
                <th>Threshold</th>
            </table>
        </div>
    </form>
</div>
<div class="modal modal-large fade" id="reportModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title">Compliance Report</h4>
        </div>
        <div class="modal-body">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
</div>