<link rel="stylesheet" href="/styles/bootstrapValidator.min.css"/>
<div class="container">
  <div class="col-md-offset-2 col-md-8">
    <div id="errorBlock" class="alert alert-danger" style="display:none;text-align:center;" role="alert"></div>
    <div id="successBlock" class="alert alert-success" style="display:none;text-align:center;" role="alert"></div>
  </div>
	<div class="row clearfix">
		<div class="col-md-12">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h2 class = "col-md-3" >Product List</h2>
          <div class="input-group col-md-5" style="float:left;margin-top:20px">
            <input type="text" class="form-control" placeholder="Search" name="srch-term" id="srch-term">
            <div class="input-group-btn">
              <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
            </div>
          </div>
          <div class="col-md-3" style="float:right;margin-top:20px">
            <button class="openForm btn btn-lg btn-primary btn-block" data-action="Add" style="padding:4.5px;">Add New Product</button>
          </div>
        </div>
        <div class="panel-body">
          <table class="table table-hover">
            <thead>
              <th>Name</th>
              <th>SKU ID</th>
              <th>Description</th>
              <th>Actions</th>
            </thead>
            <tbody id="product-list">
              <% for (var i in products) { %>
                <tr>
                  <td><%= products[i].name %></td>
                  <td><%= products[i].SKU_ID %></td>
                  <td><%= products[i].desc %></td>
                  <td>
                    <button class="openForm btn btn-sm btn-primary" data-product="<%= products[i].id %>" data-action="Edit">Edit</button>
                    <button class="removeProduct btn btn-sm btn-danger" style="margin-left:10px;" data-product="<%= products[i].id %>">Delete</button>
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
          <div class="clearfix"></div>
        </div>
      </div>
		</div>
		<div class="col-md-6" id="productForm">
		</div>
	</div>
</div>
<script type="text/javascript" src="/js/bootstrapValidator.min.js"></script>
<script type="text/javascript">

  $('.removeProduct').on('click', function() {
    var productId = $(this).data("product");
    $.ajax({
      type: "DELETE",
      url: "/product/" + productId,
      data: {},
      success: function(data) {
        console.log(data);
        $('#successBlock').empty().append("Successfully removed product").show().delay(3000).fadeOut();
        setTimeout(function() {
          window.location.reload();
        },500);
      },
      error: function(response) {
        console.log("Error");
        console.log(response);
        if(response.status === 406) {
          $('#errorBlock').empty().append("<p>Error, product in use by: " + response.responseText + "</p>").show().delay(3000).fadeOut();
        } else {
          $('#errorBlock').empty().append("<p>Error: " + response.responseText + "</p>").show().delay(3000).fadeOut();
        }
      }
    });
  });
  $("#srch-term").keyup(function () {
    typewatch(function () {
      // executed only 500 ms after the last keyup event.
      var searchTerm = $("#srch-term").val();
      var searchSplit = searchTerm.replace(/ /g, "'):containsi('");
      $("#product-list tr").not(":containsi('" + searchSplit + "')").each(function(e)   {
            $(this).css('display','none');
      });
      
      $("#product-list tr:containsi('" + searchSplit + "')").each(function(e) {
            $(this).css('display','table-row');
      });
    }, 400);
  });
	$('.openForm').on('click', function(){
		var productId = $(this).data("product");
    var action = $(this).data("action");
		$.ajax({
      type: "GET",
      url: "/product/edit",
      data: {id: productId, action: action},
      success: function(data) {
        $('#productForm').html(data);
        $('.form-horizontal').bootstrapValidator({
          message: 'This value is not valid',
          feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
          },
          fields: {
            name: {
              message: 'The username is not valid',
              validators: {
                  notEmpty: {
                    message: 'The name is required and cannot be empty'
                  },
                  regexp: {
                    regexp: /^[a-zA-Z0-9\s]+$/,
                    message: 'The name can only be alphanumeric with spaces'
                  }
              }
            },
            desc: {
              validators: {
                regexp: {
                  regexp: /^[a-zA-Z0-9\s]+$/,
                  message: 'The description can only be alphanumeric with spaces'
                }
              }
            },
            SKU_ID: {
              validators: {
                notEmpty: {
                  message: 'SKU ID is required and cannot be empty'
                },
                regexp: {
                  regexp: /^[a-zA-Z0-9]+$/,
                  message: 'SKU ID can only be alphanumeric'
                }
              }
            },
          }
        });

        $('#submitForm').on('click', function() {
          var values = $('.form-horizontal').serializeArray();

          //look for the product ID
          var productId = "";
          var productIdIndex = null;
          for(var index in values) {
            if(values[index].name === "id") {
              productId = values[index].value;
              productIdIndex = index;
            }
          }
          delete values[productIdIndex];

          if($('#submitForm').data("action") === "Edit") {
            $.ajax({
              type: "PUT",
              url: "/product/" + productId,
              data: values,
              success: function(data) {
                console.log(data);
                $('#successBlock').empty().append("Successfully updated product info").show().delay(3000).fadeOut();
                setTimeout(function() {
                  window.location.reload();
                },500);
              },
              error: function(response) {
                console.log("Error");
                console.log(response);
                $('#errorBlock').empty().append("<p>Error: " + response.responseText + "</p>").show().delay(3000).fadeOut();
              }
            });
          } else {
            $.ajax({
              type: "POST",
              url: "/product/",
              data: values,
              success: function(data) {
                console.log(data);
                $('#successBlock').empty().append("Successfully created product").show().delay(3000).fadeOut();
                setTimeout(function() {
                  window.location.reload();
                },500);
              },
              error: function(response) {
                console.log("Error");
                console.log(response);
                $('#errorBlock').empty().append("<p>Error: " + response.responseText + "</p>").show().delay(3000).fadeOut();
              }
            });
          }
        });
      },
      error: function(response) {
          console.log("Error");
          console.log(response);
      }
    });
	});

	function openErrorBlock(message) {
		$('#errorBlock').html(message).show().delay(3000).fadeOut();
	}

</script>